name: GLTF Validator

on:
  pull_request:
    paths:
      - '**/*.gltf'
      - '**/*.glb'
      - '**/*.spec.yaml'

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for comparing changes

      - name: Find changed GLTF files
        id: changed-files
        run: |
          # Get list of changed files
          git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} > changed_files.txt
          
          # Filter for GLTF files and their spec files
          grep -E '\.(gltf|glb)$' changed_files.txt > gltf_files.txt
          
          # Create output directory
          mkdir -p validation_output

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and run Docker container
        if: success()
        run: |
          if [ -s gltf_files.txt ]; then
            # Build the Docker image and load it into the local Docker daemon
            docker buildx build \
              --load \
              --cache-from=type=local,src=/tmp/.buildx-cache \
              --cache-to=type=local,dest=/tmp/.buildx-cache-new \
              -t gltf-validator \
              tools/gltf-validator
            
            # Run the validator for each GLTF file
            while IFS= read -r gltf_file; do
              # Create a directory for this file's output
              file_output_dir="validation_output/$(basename "$gltf_file" .gltf)"
              mkdir -p "$file_output_dir"
              
              # Run the validator
              docker run --rm \
                -v "$PWD:/workspace" \
                -w /workspace \
                gltf-validator validation_output "$gltf_file"
            done < gltf_files.txt
            
            # Move cache
            rm -rf /tmp/.buildx-cache
            mv /tmp/.buildx-cache-new /tmp/.buildx-cache
          else
            echo "No GLTF files changed"
            exit 0
          fi

      - name: Upload validation results
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: validation-results
          path: validation_output/
          retention-days: 5

      - name: Create GitHub comment
        uses: actions/github-script@v7
        if: success()
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Read the comment file
            const commentPath = path.join('validation_output', 'github_comment.md');
            if (fs.existsSync(commentPath)) {
              const comment = fs.readFileSync(commentPath, 'utf8');
              
              // Create or update comment
              const { data: comments } = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number
              });
              
              const botComment = comments.find(c => c.user.login === 'github-actions[bot]' && c.body.includes('GLTF Validation Results'));
              
              if (botComment) {
                await github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: botComment.id,
                  body: comment
                });
              } else {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: comment
                });
              }
            } 
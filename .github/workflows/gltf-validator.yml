name: GLTF Validator

on:
  pull_request:
    paths:
      - '**.gltf'
      - '**.glb'
      - 'tools/gltf-validator/**'

# Add permissions block
permissions:
  pull-requests: write  # Required to create/update comments
  contents: read       # Required to read repository contents
  packages: write

jobs:
  validate-gltf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Find changed GLTF files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: |
            **.gltf
            **.glb

      - name: Save changed files list
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep -E '\.(gltf|glb)$' > gltf_files.txt

      - name: Build and cache Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./tools/gltf-validator
          push: true
          tags: ghcr.io/screwloose-games/gltf-validator:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create output directory
        run: mkdir -p gltf-validation-results

      - name: Install Xvfb and dependencies
        run: sudo apt-get update && sudo apt-get install -y xvfb


      - name: Run GLTF validator
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          if [ -s gltf_files.txt ]; then
            while IFS= read -r gltf_file; do
              if [ -f "$gltf_file" ]; then
                echo "Processing $gltf_file"
                docker run --rm \
                  -v "$(pwd):/workspace" \
                  -w /workspace \
                  ghcr.io/screwloose-games/gltf-validator:latest \
                  "/workspace/gltf-validation-results" "$gltf_file"
              fi
            done < gltf_files.txt
          else
            echo "No GLTF files to process"
          fi

      - name: Upload validation results
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: gltf-validation-results
          path: gltf-validation-results/
          retention-days: 1
        
      - name: Process markdown and upload images
        run: |
          import os
          import re
          import shutil

          MARKDOWN_FILE = "github_comment.md"
          ASSETS_BRANCH_PATH = "assets-branch"
          UPLOAD_DIR = os.path.join(ASSETS_BRANCH_PATH, "uploaded-assets")
          os.makedirs(UPLOAD_DIR, exist_ok=True)

          with open(MARKDOWN_FILE, "r", encoding="utf-8") as f:
              content = f.read()

          repo = os.getenv("GITHUB_REPOSITORY")
          image_pattern = r'!\[(.*?)\]\((/workspace/.*?)\)'
          matches = re.findall(image_pattern, content)

          for alt_text, full_path in matches:
              if not os.path.isfile(full_path):
                  print(f"Missing image: {full_path}")
                  continue

              # Copy image to relative folder in upload dir
              relative_path = os.path.relpath(full_path, "/workspace/gltf-validation-results/")
              target_path = os.path.join(UPLOAD_DIR, relative_path)
              os.makedirs(os.path.dirname(target_path), exist_ok=True)
              shutil.copy2(full_path, target_path)

              raw_url = f"https://raw.githubusercontent.com/{repo}/assets/uploaded-assets/{relative_path}"
              content = content.replace(f"]({full_path})", f"]({raw_url})")

          # Save updated markdown
          with open(MARKDOWN_FILE, "w", encoding="utf-8") as f:
              f.write(content)


      - name: Create or update PR comment
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Read the validation results
            const MARKDOWN_FILE = "github_comment.md"
            const content = fs.readFileSync(path.join(resultsDir, MARKDOWN_FILE), 'utf8');
            
            // Find existing comments
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            const commentHeadline = "## GLTF Validation Results\n\n";

            const comment = commentHeadline + content;
            
            const existingComment = comments.find(c => c.body.startsWith(commentHeadline));
            
            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            } 
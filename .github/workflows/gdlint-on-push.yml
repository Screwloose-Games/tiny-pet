# Workflow to automatically lint gdscript code
name: gdlint on push

on:
  pull_request:
    paths:
    - '**/*.gd'
  push:
    paths:
    - '**/*.gd'

jobs:
  gdlint:
    name: gdlint scripts
    runs-on: ubuntu-latest
    steps:
      # Check out the repository
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find changed GDScript files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: |
            **.gd
      
      # Ensure python is installed
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Install gdtoolkit
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install 'gdtoolkit==4.*'

      - name: Save changed files list
        if: steps.changed-files.outputs.any_changed == 'true'
        id: gd_script_files
        run: |
          echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' > gd_script_files.txt
          echo "files=$(cat gd_script_files.txt | paste -sd ',' -)" >> $GITHUB_OUTPUT
      # Lint all GDScript files except those in the addons directory
      # This is a workaround for the fact that gdlint does not support ignoring directories

      - name : Lint Godot Project
        if: steps.gd_script_files.outputs.files != ''
        run: |
          gdlint $(cat gd_script_files.txt | grep -v '^addons/')
      # - name: Lint Godot Project ignoring addons
      #   run: |
      #     gdlint $(find . -maxdepth 1 \( -type d ! -name '.*' ! -name 'addons' -printf '%P\n' \) -o \( -type f -name '*.gd' -printf '%P\n' \))
